#summary About 2D Graphics Engine implementation
#labels Phase-Implementation

= Introduction =

Perhaps the most challenging part. The 2D Graphics Engine needs to simulate all the commands(from the Python or Lua interpreter) for a given C++ robot.

= Engine =

All the robots, sensors and everything else are  [http://doc.trolltech.com/qgraphicsitem.html QGraphicsItem] objects, so it's easy to handle collisions and graphic paintings. All these items belongsto a [http://doc.trolltech.com/qgraphicsscene.html QGraphicsScene], and this will make visible to the user by showing them(items) in a [http://doc.trolltech.com/qgraphicsview.html QGraphicsView] render engine.

= Current status =

It's 50% done. The biggest challenge is to make each !RobotInterface::advance()*`*`* visible and editable from the interpreter (Python or Lua scripts).

* !RobotInterface inherits this method from QGraphicsItem